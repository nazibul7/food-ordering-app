# Stage 1: Build the frontend
FROM node:20-slim AS builder

# Declare build-time arguments
# Set environment variables that can be used during the build process

ARG VITE_AUTH0_DOMAIN
ENV VITE_AUTH0_DOMAIN=${VITE_AUTH0_DOMAIN}

ARG VITE_AUTH0_CLIENT_ID
ENV VITE_AUTH0_CLIENT_ID=${VITE_AUTH0_CLIENT_ID}

ARG VITE_AUTH0_CALLBACK_URL
ENV VITE_AUTH0_CALLBACK_URL=${VITE_AUTH0_CALLBACK_URL}

ARG VITE_AUTH0_AUDIENCE
ENV VITE_AUTH0_AUDIENCE=${VITE_AUTH0_AUDIENCE}

ARG VITE_API_BASE_URL
ENV VITE_API_BASE_URL=${VITE_API_BASE_URL}



RUN echo "VITE_AUTH0_DOMAIN=$VITE_AUTH0_DOMAIN" \
    && echo "VITE_AUTH0_CLIENT_ID=$VITE_AUTH0_CLIENT_ID" \
    && echo "VITE_AUTH0_CALLBACK_URL=$VITE_AUTH0_CALLBACK_URL" \
    && echo "VITE_AUTH0_AUDIENCE=$VITE_AUTH0_AUDIENCE" \
    && echo "VITE_API_BASE_URL=$VITE_API_BASE_URL"


WORKDIR /usr/src/app

# Copy package files and install dependencies
COPY package*.json ./

RUN npm install

# Copy the entire app into the container
COPY . .

# Build the frontend
RUN npm run build

# Stage 2: Serve the frontend using NGINX
FROM nginx:alpine

# Copy the built frontend from the builder stage
COPY --from=builder /usr/src/app/dist /usr/share/nginx/html

COPY nginx.conf /etc/nginx/nginx.conf

# Expose port 80 for the web server
EXPOSE 80

# Start the NGINX server
CMD ["nginx", "-g", "daemon off;"]
